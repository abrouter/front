{"version":3,"sources":["http/httpRequest.js","http/saveExperimentState.js","containers/Inputs/ExperimentUidInput.js","containers/ExperimentCreate.js","http/getExperiments.js","http/deleteExperimentState.js","containers/DontHaveExperiments.js","containers/Navigation/Tabs/TabsToExperiments.js","containers/Navigation/Tabs/TabsToFeatureFlag.js","containers/Navigation/Navigation.js","containers/ExperimentsList.js","components/App.js","index.js"],"names":["httpRequest","url","method","body","data","credentials","window","token","JSON","stringify","fetch","api","then","response","status","error","Error","json","saveExperimentState","experiment","link","ownerId","undefined","userId","dataType","mode","alias","name","replace","payload","isEnabled","isFeatureToggle","branches","reduce","acc","branch","push","id","uid","percent","ExperimentUidInput","props","disabled","className","autoComplete","type","data-error","placeholder","value","onChange","e","changeUid","target","ExperimentCreate","styleCreateExperimentBlock","parent","experimentCreate","submitHandle","bind","map","this","forceUpdate","event","appState","adding","createFeatureToggle","preventDefault","activeItem","experimentList","load","showNotifications","redirectToExperiments","refreshState","message","toast","success","style","background","color","padding","iconTheme","primary","secondary","item","branchUid","i","Date","now","toString","setTimeout","document","getElementById","currentTarget","getAttribute","filter","createBranchId","changeName","changePercent","changeBranchName","tab","setActiveTab","experimentStyleBlock","getElementsByClassName","classList","add","getExperimentsByTab","displayAddBranch","titleCreate","experimentName","experimentUid","nameColumn","onSubmit","autocomplete","data-id","onClick","href","onClickCapture","removeBranch","addBranch","React","Component","getExperiments","experiments","meta","newItem","attributes","is_enabled","is_feature_toggle","relationships","owner","included","deleteExperimentState","DontHaveExperiments","buttonName","createExperiment","srcSet","src","alt","TabsToExperiments","activeExperiments","notActiveExperiments","length","showActiveExperiments","showNotActiveExperiments","TabsToFeatureFlag","showAllExperiments","Navigation","ExperimentsList","state","isLoaded","activeTab","displayExperiments","setState","enable","deleteClassEdit","edit","submitHandleCheckbox","deleteClassActive","remove","addClassNameActive","showDontHaveExperiments","showExperiments","buttonCreate","displayLinkStats","spinnerStyle","active","spinner","styles","base","position","height","width","stroke","overlay","showActiveExperiment","showNotActiveExperiment","showAllExperiment","data-edit-flags","checked","editCheckbox","for","content","data-correct","removeExperiment","cancelEdit","App","proxyBindings","console","log","closest","querySelector","parseInt","contains","reverseOrder","render"],"mappings":"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","file":"static/js/main.8e5a3591.chunk.js","sourcesContent":["function httpRequest(url, method, body) {\n  let data = {\n    credentials: 'include',\n    'method': method,\n    credentials: 'omit',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n      'Authorization': window.token\n    },\n  };\n  if (method !== 'GET') {\n    data.body = JSON.stringify(body);\n  }\n\n\n    return fetch(window.api + url, data)\n      .then(response => {\n\n        if (response.status !== 200 && response.status !== 201 && response.status !== 204) {\n          let error = (new Error('Request failed'));\n          error.json = response.json();\n          throw error; \n        }\n\n        if (method !== 'DELETE') {\n          return response.json()\n        } else {\n          return response;\n        }\n      }\n      );\n}\n\nexport default httpRequest;\n","import httpRequest from './httpRequest';\n\nfunction saveExperimentState(experiment) {\n    const ownerId = experiment.ownerId === undefined ? window.userId : experiment.ownerId;\n    const dataType = window.mode === 'feature-toggle' ? 'feature-toggles' : 'experiments';\n    let alias = experiment.alias ?? experiment.name.replace(/ /g, '-');\n\n    let payload = {\n        'data': {\n            'type': dataType,\n            'attributes': {\n                'name': experiment.name,\n                'alias': alias,\n                'is_enabled': experiment.isEnabled ?? true,\n                'is_feature_toggle': experiment.isFeatureToggle ?? false,\n                'config': [],\n            },\n            'relationships': {\n                'branches': {\n                    'data': experiment.branches.reduce(function (acc, branch) {\n                        acc.push({\n                            'id': branch.id,\n                            'type': 'experiment_branches',\n                        });\n\n                        return acc;\n                    }, [])\n                },\n                'owner': {\n                    'data': {\n                        'id': ownerId,\n                        'type': 'users',\n                    }\n                }\n            }\n        },\n        'included': experiment.branches.reduce(function (acc, branch) {\n            acc.push({\n                'id': branch.id,\n                'type': 'experiment_branches',\n                'attributes': {\n                    'name': branch.uid,\n                    'percent': branch.percent,\n                    'uid': branch.uid,\n                    'config': {},\n                },\n                'relationships': {\n                    'experiment': {\n                        'data': {\n                            'id': experiment.id,\n                            'type': 'experiments',\n                        },\n                    },\n                    'owner': {\n                        'data': {\n                            'id': ownerId,\n                            'type': 'users',\n                        }\n                    }\n                }\n            });\n\n            return acc;\n        }, []),\n    };\n    if (experiment.id !== undefined) {\n        payload.data.id = experiment.id;\n    }\n\n    let link;\n\n    if(window.mode === 'feature-toggle') {\n        link = 'feature-toggles/' + (experiment.id ?? '');\n    } else link = 'experiments/' + (experiment.id ?? '');\n\n    return httpRequest(link, experiment.id === undefined ? 'POST' : 'PATCH', payload);\n}\n\nexport default saveExperimentState;\n","import React from \"react\";\r\n\r\nexport function ExperimentUidInput(props) {\r\n    let disabled = props.mode === 'edit';\r\n\r\n    if (window.mode !== 'feature-toggle') {\r\n        return (\r\n            <div className=\"create-setting__item\">\r\n                <label className=\"create-setting__label\">Experiment uid</label>\r\n                <input autoComplete=\"off\"\r\n                       type=\"text\"\r\n                       data-error=\"Ошибка\"\r\n                       placeholder=\"Button\"\r\n                       className=\"input create-setting__input\"\r\n                       value={props.uid}\r\n                       disabled={disabled}\r\n                       onChange={e => props.changeUid(e.target.value)}\r\n                />\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <>\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport saveExperimentState from '../http/saveExperimentState';\nimport {ExperimentUidInput} from \"./Inputs/ExperimentUidInput\";\n\nclass ExperimentCreate extends React.Component {\n    styleCreateExperimentBlock = {'display':'none'};\n\n    constructor(props) {\n        super(props);\n\n        this.parent = props.parent;\n        this.props.parent.experimentCreate = this;\n        this.submitHandle = this.submitHandle.bind(this);\n        this.map = {};\n    }\n\n    componentDidMount() {\n        this.forceUpdate();\n    }\n\n    submitHandle(event) {\n        this.props.parent.appState.adding=true;\n        this.forceUpdate();\n\n        if (window.mode === 'feature-toggle' && this.props.parent.appState.mode !== 'edit') {\n            this.createFeatureToggle()\n        }\n\n        event.preventDefault();\n        saveExperimentState(this.props.parent.appState.activeItem).then(response => {\n            this.props.parent.experimentList.load();\n            this.showNotifications();\n            this.redirectToExperiments();\n            this.props.parent.refreshState();\n            this.props.parent.appState.adding=false;\n            this.forceUpdate();\n        });\n\n        return false;\n    }\n\n    showNotifications() {\n        let message;\n        let name;\n        let mode = this.props.parent.appState.mode;\n        window.mode === 'feature-toggle' ? name = 'Feature flag' : name = 'Experiment';\n\n        switch (mode) {\n            case ('create'):\n                message = 'has been successfully created';\n                break;\n            case ('edit'):\n                message = 'has been successfully updated';\n                break;\n            case ('delete'):\n                message = 'has been successfully deleted';\n                break;\n        }\n\n        this.parent.toast.success(name + ' ' + message, {\n            style: {\n                background: '#51A351',\n                color: '#FFFFFF',\n                padding: '16px'\n            },\n            iconTheme: {\n                primary: '#51A351',\n                secondary: '#FFFFFF',\n            },\n        });\n    }\n\n    submitHandleCheckbox(item) {\n        saveExperimentState(item).then(response => {\n            this.props.parent.experimentList.load();\n            this.props.parent.refreshState();\n            this.forceUpdate();\n        });\n    }\n\n    createFeatureToggle() {\n        let branchUid = ['On', 'Off'];\n        let percent = [100, 0];\n        this.props.parent.appState.activeItem.isFeatureToggle = true;\n        this.props.parent.appState.activeItem.branches = [];\n\n        for (let i = 0; i < 2; i++) {\n            this.props.parent.appState.activeItem.branches.push({\n                'id': Date.now().toString(),\n                'uid': branchUid[i],\n                'percent': percent[i],\n            });\n        }\n    }\n\n    error(message) {\n        setTimeout(function () {\n            document.getElementById('message').style = 'display:block';\n        }, 200);\n        this.message = message;\n    }\n\n    createBranchId() {\n        this.props.parent.appState.activeItem.branches = [];\n\n        for (let i = 0; i < 2; i++) {\n            this.props.parent.appState.activeItem.branches.push({\n                'id': Date.now().toString() + i\n            });\n        }\n\n        this.forceUpdate();\n    }\n\n    addBranch(e) {\n        if (this.props.parent.appState.activeItem.branches === undefined) {\n            this.props.parent.appState.activeItem.branches = [];\n        }\n\n        this.props.parent.appState.activeItem.branches.push({\n            'id': Date.now().toString()\n        });\n\n        this.forceUpdate();\n        e.preventDefault();\n        return false;\n    }\n\n    removeBranch(e) {\n        e.preventDefault();\n        let id = e.currentTarget.getAttribute('data-id');\n        this.props.parent.appState.activeItem.branches = this.props.parent.appState.activeItem.branches.filter(function (branch) {\n            return branch.id !== id;\n        });\n        this.forceUpdate();\n    }\n\n    createExperiment(e) {\n        this.styleCreateExperimentBlock = {'display':'block'};\n        this.createBranchId();\n        this.forceUpdate();\n    }\n\n    changeName(value) {\n        this.props.parent.changeName(value);\n        this.forceUpdate();\n    }\n\n    changeUid(value) {\n        this.props.parent.changeUid(value);\n        this.forceUpdate();\n    }\n\n    changePercent(e) {\n        this.props.parent.changePercent(e);\n        this.forceUpdate();\n    }\n\n    changeBranchName(e) {\n        this.props.parent.changeBranchName(e);\n        this.forceUpdate();\n    }\n\n    redirectToExperiments() {\n        let mode = this.props.parent.appState.mode;\n\n        if (mode === 'create') {\n            let tab = window.mode === 'feature-toggle' ? 'all' : 'active';\n            this.props.parent.experimentList.setActiveTab(tab);\n            this.props.parent.experimentList.experimentStyleBlock = {'display':'block'};\n            this.styleCreateExperimentBlock = {'display':'none'};\n            document.getElementsByClassName('top-setting__item')[0].classList.add('active');\n            this.props.parent.experimentList.getExperimentsByTab();\n        }\n\n        this.forceUpdate();\n    }\n\n    render() {\n        const displayAddBranch = window.mode === 'feature-toggle' ? {'display':'none'} : {};\n        const titleCreate = window.mode === 'feature-toggle' ? 'flag' : 'experiment';\n        let branches = this.props.parent.appState.activeItem.branches ?? [],\n            experimentName = this.props.parent.appState.activeItem.name ?? '',\n            experimentUid = this.props.parent.appState.activeItem.alias ?? experimentName.replace(/ /g, '-'),\n            nameColumn = window.mode === 'feature-toggle' ? 'Feature flags ' : 'Experiment ';\n\n        return (\n            <>\n                <div className=\"setting__create create-setting\" style={this.styleCreateExperimentBlock}>\n                    <div className=\"create-setting__block\">\n                        <div className=\"create-setting__title\">\n                            Create a new {titleCreate}\n                        </div>\n                        <form className=\"create-setting__form\">\n                            <div className=\"create-setting__item\">\n                                <label className=\"create-setting__label\">{nameColumn} name</label>\n                                <input\n                                    autoComplete=\"off\"\n                                    type=\"text\"\n                                    data-error=\"Ошибка\"\n                                    placeholder=\"Button color test\"\n                                    className=\"input create-setting__input\"\n                                    value={experimentName}\n                                    onChange={e => this.changeName(e.target.value)}\n                                />\n                            </div>\n                            <ExperimentUidInput\n                                uid = {experimentUid}\n                                mode = {this.props.parent.appState.mode}\n                                changeUid = {e => this.changeUid(e)}\n                            />\n                        </form>\n                    </div>\n                    <div className=\"create-setting__block\">\n                        <div className=\"create-setting__title\" style={displayAddBranch}>\n                            Branches\n                        </div>\n                        <form className=\"create-setting__form\" onSubmit={this.submitHandle.bind(this)}>\n                            {branches.map((branch) =>\n                                <div className=\"create-setting__row\" style={displayAddBranch}>\n                                    <div className=\"create-setting__item\">\n                                        <label className=\"create-setting__label\">Branch name</label>\n                                        <input autocomplete=\"off\"\n                                               type=\"text\"\n                                               data-error=\"Ошибка\"\n                                               placeholder=\"Branch name\"\n                                               className=\"input create-setting__input\"\n                                               onChange={this.changeBranchName.bind(this)}\n                                               data-id={branch.id}\n                                        />\n                                    </div>\n                                    <div className=\"create-setting__item2\">\n                                        <div className=\"create-setting__item-digit\">\n                                            <label className=\"create-setting__label\">Split</label>\n                                            <div className=\"quantity\">\n                                                <span className=\"quantity__label\">%</span>\n                                                <div className=\"quantity__input\">\n                                                    <input autocomplete=\"off\"\n                                                           type=\"text\"\n                                                           name=\"form[]\"\n                                                           data-id={branch.id}\n                                                           id={\"branch-percent-\" + branch.id}\n                                                           value={branch.percent ?? '0'}\n                                                           onChange={this.changePercent.bind(this)}\n                                                    />\n                                                </div>\n                                                <div className=\"quantity__buttons\" onClick={this.changePercent.bind(this)}>\n                                                    <div className=\"quantity__button quantity__button_plus\">\n                                                        <svg className=\"quantity__icon\">\n                                                            <use href=\"/img/icons/icons.svg#arrow-quantity\"/>\n                                                        </svg>\n                                                    </div>\n                                                    <div className=\"quantity__button quantity__button_minus\">\n                                                        <svg className=\"quantity__icon\">\n                                                            <use href=\"/img/icons/icons.svg#arrow-quantity\"/>\n                                                        </svg>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <button className=\"create-setting__remove\" data-id={branch.id} onClickCapture={e => this.removeBranch(e)}>\n                                            <svg className=\"create-setting__remove-icon\">\n                                                <use href=\"/img/icons/icons.svg#close\"/>\n                                            </svg>\n                                        </button>\n                                    </div>\n                                </div>\n                            )}\n                            <button onClick={this.addBranch.bind(this)} className=\"create-setting__button\" style={displayAddBranch}>\n                                + Add another branch\n                            </button>\n                            <div className=\"create-setting__bottom\">\n                                <button className=\"create-setting__update button\" type=\"submit\">\n                                    Create\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n\n            </>\n\n        );\n    }\n}\nexport default ExperimentCreate\n","import httpRequest from './httpRequest';\n\nfunction getExperiments() {\n    return httpRequest('experiments?include=branches', 'GET', {}).then(response => {\n        let experiments = response.data.reduce(function (acc, item) {\n            let token = response.meta.token;\n            let link = 'https://abrouter.com/api/v1/experiment/run?token='+token+'&experimentId=' + item.id +'&userId={USER_ID}';\n            const newItem = {\n                'name': item.attributes.name,\n                'alias': item.attributes.alias,\n                'branches': [],\n                'isEnabled': item.attributes.is_enabled,\n                'isFeatureToggle': item.attributes.is_feature_toggle,\n                'id': item.id,\n                'ownerId': item.relationships.owner.data.id,\n                'tryUrl': link,\n            }; \n            let branches = item.relationships.branches.data.reduce(function (acc, branch) {\n                acc.push(response.included.filter(function (item) {\n                    return item.id === branch.id;\n                })[0]);\n                return acc;\n            }, []);\n\n            newItem.branches = branches.reduce(function (acc, item) {\n                const newItem = {\n                    'name': item.attributes.name,\n                    'percent': item.attributes.percent,\n                    'uid': item.attributes.uid,\n                    'id': item.id,\n                };\n                acc.push(newItem);\n                return acc;\n            }, []);\n        \n\n            acc.push(newItem);\n            return acc;\n        }, []);\n\n        experiments.token = response.meta.token;\n        return experiments;\n    });\n}\n\nexport default getExperiments;\n","import httpRequest from './httpRequest';\n\nfunction deleteExperimentState(experiment) {\n    const ownerId = experiment.ownerId === undefined ? window.userId : experiment.ownerId;\n\n    let payload = {\n        'data': {\n            'id': experiment.id,\n            'type': 'experiments'\n        }\n    };\n\n    return httpRequest('experiments/' + (experiment.id), 'DELETE', payload);\n}\n\nexport default deleteExperimentState;\n","import React from \"react\"\r\n\r\nclass DontHaveExperiments extends React.Component\r\n{\r\n    render() {\r\n        let buttonName = window.mode === 'feature-toggle' ? 'Add new flag' : 'Create new experiment'\r\n        return (\r\n            <>\r\n                <div className=\"setting__top top-setting\">\r\n                    <div className=\"top-setting__info\">\r\n                        You don't have active experiments, yet.\r\n                    </div>\r\n                    <button className=\"top-setting__btn\" onClick={(e) => this.props.createExperiment(e)}>\r\n                        <svg className=\"top-setting__icon\">\r\n                            <use href=\"/img/icons/icons.svg#plus\"/>\r\n                        </svg>\r\n                        <svg className=\"top-setting__icon top-setting__icon2\">\r\n                            <use href=\"/img/icons/icons.svg#plus2\"/>\r\n                        </svg>\r\n                        <span>{buttonName}</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"setting__image\" style={this.props.experimentStyleBlock}>\r\n                    <picture>\r\n                        <source srcSet=\"/img/png/setting.webp\" type=\"image/webp\"/>\r\n                        <img src=\"/img/png/setting.png?_v=1644581884261\" alt=\"Image\"/>\r\n                    </picture>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DontHaveExperiments;","import React from 'react';\r\n\r\nexport function TabsToExperiments(props) {\r\n    let activeExperiments = 0;\r\n    let notActiveExperiments = 0;\r\n    let experiments = props.experiments;\r\n    let length = props.experiments.length;\r\n\r\n    for(let i = 0; i < length; i++) {\r\n        if (experiments[i].isEnabled === true) {\r\n            activeExperiments++;\r\n        } else notActiveExperiments++;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"top-setting__item active\" onClick={(e) => props.showActiveExperiments(e)}>\r\n                <div className=\"top-setting__item-value\">\r\n                    Active\r\n                </div>\r\n                <span className=\"top-setting__count\">{activeExperiments}</span>\r\n            </div>\r\n            {/* <div className=\"top-setting__item\" onClick={this.showAwaitingLaunchExperiment.bind(this)}>\r\n                                    <div className=\"top-setting__item-value\">\r\n                                        Awaiting launch\r\n                                    </div>\r\n                                    <span className=\"top-setting__count\">0</span>\r\n                                </div> */}\r\n            <div className=\"top-setting__item\" onClick={(e) => props.showNotActiveExperiments(e)}>\r\n                <div className=\"top-setting__item-value\">\r\n                    Not active\r\n                </div>\r\n                <span className=\"top-setting__count\">{notActiveExperiments}</span>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport function TabsToFeatureFlag(props) {\r\n    return (\r\n        <>\r\n            <div className=\"top-setting__item active\" onClick={(e) => props.showAllExperiments(e)}>\r\n                <div className=\"top-setting__item-value\">\r\n                    All\r\n                </div>\r\n                <span className=\"top-setting__count\">{props.experiments}</span>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport {TabsToExperiments} from \"./Tabs/TabsToExperiments\";\r\nimport {TabsToFeatureFlag} from \"./Tabs/TabsToFeatureFlag\";\r\n\r\nexport function Navigation (props) {\r\n    let tab = window.mode === 'feature-toggle'\r\n        ? <TabsToFeatureFlag\r\n            experiments = {props.experiments.length}\r\n            showAllExperiments = {(e) => props.showAllExperiments(e)}\r\n        />\r\n        : <TabsToExperiments\r\n            experiments ={props.experiments}\r\n            showActiveExperiments = {(e) => props.showActiveExperiments(e)}\r\n            showNotActiveExperiments = {(e) => props.showNotActiveExperiments(e)}\r\n        />\r\n\r\n    return (\r\n        <div className=\"top-setting__navigation\">\r\n            {tab}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport getExperiments from '../http/getExperiments';\nimport deleteExperimentState from '../http/deleteExperimentState';\nimport LoadingOverlay from 'react-loading-overlay'\nimport DontHaveExperiments from \"./DontHaveExperiments\";\nimport {Navigation} from \"./Navigation/Navigation\";\nimport {ExperimentUidInput} from \"./Inputs/ExperimentUidInput\";\nimport Tippy from '@tippyjs/react';\nimport 'tippy.js/dist/tippy.css';\n\nclass ExperimentsList extends React.Component {\n    experimentStyleBlock = {'display': 'block'};\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoaded: 0,\n            activeTab: window.mode === 'feature-toggle'\n                ? 'all'\n                : 'active',\n            experiments: [],\n            displayExperiments: []\n        }\n        this.props = props;\n        this.props.parent.experimentList = this;\n\n    }\n\n\n    componentDidMount() {\n\n        if (window.mode !== 'mainpage') {\n            this.load();\n        } else {\n            this.setState({\n                isLoaded: 1\n            });\n        }\n    }\n\n    load() {\n        this.setState({\n            isLoaded: 0\n        })\n        getExperiments().then(data => {\n            this.props.state.experiments = data;\n\n            if (window.mode === 'feature-toggle') {\n                this.setState({\n                    experiments: data.filter(function (experiments) {\n                        return experiments.isFeatureToggle === true;\n                    })\n                })\n            } else {\n                this.setState({\n                    experiments: data.filter(function (experiments) {\n                        return experiments.isFeatureToggle === false;\n                    })\n                })\n            }\n\n            this.getExperimentsByTab();\n            this.setState({\n                isLoaded: 1\n            })\n        });\n    }\n\n    getExperimentsByTab() {\n        let enable;\n\n        switch (this.state.activeTab) {\n            case ('active'):\n                enable = true;\n                break;\n            case ('not active'):\n                enable = false;\n                break;\n            case ('all'):\n                break;\n            case ('awaiting launch'):\n                break;\n        }\n\n        if (this.state.activeTab === 'all') {\n            this.setState({\n                displayExperiments: this.state.experiments\n            })\n        } else {\n            this.setState({\n                displayExperiments: this.state.experiments.filter(function (experiment) {\n                    return experiment.isEnabled === enable;\n                })\n            })\n        }\n    }\n\n    removeExperiment(item, e) {\n        this.props.parent.appState.mode = 'delete';\n        this.props.parent.appState.activeItem = item;\n\n        e.preventDefault();\n        deleteExperimentState(this.props.parent.appState.activeItem).then(() => {\n            this.load();\n            this.props.parent.experimentCreate.showNotifications();\n            this.props.parent.refreshState();\n            this.forceUpdate();\n            this.props.parent.appState.adding = false;\n        });\n    }\n\n    removeBranch(e) {\n        e.preventDefault();\n        let id = e.currentTarget.getAttribute('data-id');\n        this.props.parent.appState.activeItem.branches = this.props.parent.appState.activeItem.branches.filter(function (branch) {\n            return branch.id !== id;\n        });\n        this.forceUpdate();\n    }\n\n    edit(item, e) {\n        this.deleteClassEdit();\n        document.getElementById('experiment-' + item.id).classList.add('edit')\n        e.preventDefault();\n        this.forceUpdate();\n        this.props.parent.edit(item);\n    }\n\n    editCheckbox(item) {\n        item.isEnabled = item.isEnabled !== true;\n\n        this.props.parent.experimentCreate.submitHandleCheckbox(item)\n        this.forceUpdate()\n    }\n\n    cancelEdit(e) {\n        this.deleteClassEdit();\n        e.preventDefault();\n        this.props.parent.appState.mode = 'create';\n        this.props.parent.appState.activeItem = {};\n        this.forceUpdate();\n    }\n\n    createExperiment(e) {\n        this.deleteClassActive(e)\n        this.props.parent.refreshState();\n        this.experimentStyleBlock = {'display': 'none'};\n        this.props.parent.experimentCreate.createExperiment(e);\n        this.forceUpdate();\n    }\n\n    submitHandle(e) {\n        this.deleteClassEdit();\n        this.props.parent.experimentCreate.submitHandle(e);\n    }\n\n    addClassNameActive(e) {\n        this.experimentStyleBlock = {'display': 'block'};\n        this.props.parent.experimentCreate.styleCreateExperimentBlock = {'display': 'none'};\n        this.deleteClassActive(e);\n        e.currentTarget.classList.add(\"active\");\n        this.props.parent.experimentCreate.forceUpdate()\n        this.forceUpdate();\n    }\n\n    deleteClassActive() {\n        let link = document.getElementsByClassName('top-setting__item');\n\n        for (let i = 0; i < link.length; i++) {\n            link[i].classList.remove('active');\n        }\n    }\n\n    deleteClassEdit() {\n        let link = document.getElementsByClassName('table-setting__wrap');\n\n        for (let i = 0; i < link.length; i++) {\n            link[i].classList.remove('edit');\n        }\n    }\n\n    showAllExperiment(e) {\n        this.setState({\n            activeTab: 'all'\n        }, () => {\n            this.getExperimentsByTab()\n        })\n        this.addClassNameActive(e)\n    }\n\n    showActiveExperiment(e) {\n        this.setState({\n            activeTab: 'active'\n        }, () => {\n            this.getExperimentsByTab()\n        })\n        this.addClassNameActive(e)\n    }\n\n    showNotActiveExperiment(e) {\n        this.setState({\n            activeTab: 'not active'\n        }, () => {\n            this.getExperimentsByTab()\n        })\n        this.addClassNameActive(e)\n    }\n\n    showAwaitingLaunchExperiment(e) {\n        this.displayExperiments = []\n        this.setState({\n            activeTab: 'awaiting launch'\n        }, () => {\n            this.getExperimentsByTab()\n        })\n        this.addClassNameActive(e)\n    }\n\n    countActiveAndNotActiveExperiments() {\n        let activeExperiments = 0;\n        let notActiveExperiments = 0;\n        let experiments = this.state.experiments;\n        let length = this.state.experiments.length;\n\n        for (let i = 0; i < length; i++) {\n            if (experiments[i].isEnabled === true) {\n                activeExperiments++;\n            } else notActiveExperiments++;\n        }\n\n        return {activeExperiments, notActiveExperiments};\n    }\n\n    changeName(e) {\n        let value = e.target.value;\n        this.props.parent.changeName(value);\n        this.forceUpdate();\n    }\n\n    changePercent(e) {\n        this.props.parent.changePercent(e);\n        this.forceUpdate();\n    }\n\n    changeBranchName(e) {\n        this.props.parent.changeBranchName(e);\n        this.forceUpdate();\n    }\n\n    setActiveTab(tab) {\n        this.setState({\n            activeTab: tab\n        })\n    }\n\n    render() {\n        let showDontHaveExperiments,\n            showExperiments = {'display': 'flex'};\n\n        if (this.state.experiments.length === undefined || this.state.experiments.length === 0) {\n            showDontHaveExperiments = <DontHaveExperiments\n                experimentStyleBlock={this.experimentStyleBlock}\n                createExperiment={(e) => this.createExperiment(e)}\n            />\n            showExperiments = {'display': 'none'};\n        }\n\n        let experimentName = this.props.parent.appState.activeItem.name,\n            branches;\n\n        if (window.mode !== 'feature-toggle') {\n            branches = this.props.parent.appState.activeItem.branches ?? [];\n        } else branches = [];\n\n        let buttonCreate = window.mode === 'feature-toggle' ? 'Add new flag' : 'Create new experiment',\n            displayLinkStats = window.mode === 'feature-toggle' ? {'display': 'none'} : {'display': 'block'},\n            nameColumn = window.mode === 'feature-toggle' ? 'Feature flags ' : 'Experiment ',\n            spinnerStyle = this.state.isLoaded === 0;\n\n        return (\n            <>\n                <LoadingOverlay\n                    active={spinnerStyle}\n                    spinner\n                    styles={{\n                        spinner: (base) => ({\n                            ...base,\n                            position: 'absolute',\n                            height: '64px',\n                            width: '64px',\n                            '& svg circle': {\n                                stroke: 'rgba(30, 144, 255)'\n                            }\n                        }),\n                        overlay: (base) => ({\n                            ...base,\n                            position: 'fixed',\n                            background: 'rgba(250, 250, 250, 0.80)',\n                        })\n                    }}\n                />\n                {showDontHaveExperiments}\n                <div className=\"setting__top top-setting\" style={showExperiments}>\n                    <Navigation\n                        showActiveExperiments={(e) => this.showActiveExperiment(e)}\n                        showNotActiveExperiments={(e) => this.showNotActiveExperiment(e)}\n                        showAllExperiments={(e) => this.showAllExperiment(e)}\n                        experiments={this.state.experiments}\n                    />\n                    <button className=\"top-setting__btn\" onClick={this.createExperiment.bind(this)}>\n                        <svg className=\"top-setting__icon\">\n                            <use href=\"/img/icons/icons.svg#plus\"/>\n                        </svg>\n                        <svg className=\"top-setting__icon top-setting__icon2\">\n                            <use href=\"/img/icons/icons.svg#plus2\"/>\n                        </svg>\n                        <span>{buttonCreate}</span>\n                    </button>\n                </div>\n                <div data-edit-flags className=\"setting__table table-setting\" style={this.experimentStyleBlock}>\n                    <div className=\"table-setting__head\" style={showExperiments}>\n                        <div className=\" table-setting__column1\">Status</div>\n                        <div className=\"table-setting__column2 \">{nameColumn} name</div>\n                        <div className=\"table-setting__column3\">\n                            {nameColumn} ID\n                        </div>\n                        <div className=\"table-setting__column4\">\n                            Manage\n                        </div>\n                    </div>\n\n                    {this.state.displayExperiments.map((item) =>\n\n                        <div className=\"table-setting__wrap\" id={\"experiment-\" + item.id}>\n                            <div className=\"table-setting__row\">\n                                <div className=\"table-setting__status table-setting__column1\">\n                                    <div className=\"checkbox table-setting__checkbox\">\n                                        <input\n                                            id=\"c_1\"\n                                            data-error=\"Ошибка\"\n                                            className=\"checkbox__input\"\n                                            type=\"checkbox\"\n                                            value=\"1\"\n                                            name=\"form[]\"\n                                            checked={item.isEnabled}\n                                        />\n                                        <label\n                                            onClick={() => this.editCheckbox(item)}\n                                            for=\"c_1\"\n                                            className=\"checkbox__label\"\n                                        >\n                                            <span className=\"checkbox__text\"/>\n                                        </label>\n                                    </div>\n                                </div>\n                                <div className=\"table-setting__name table-setting__column2\">{item.name}</div>\n                                <div className=\"table-setting__id table-setting__column3\">\n                                    <span className=\"table-setting__mobile-label\">\n                                        Experiment ID\n                                    </span>\n                                    {item.alias ? item.alias : item.id}\n                                </div>\n                                <div className=\"table-setting__manage table-setting__column4\">\n                                    <div className=\"table-setting__items\">\n                                        <Tippy content=\"View stats\">\n                                            <a href={\"/en/board/experiment-stats?experimentId=\" + item.id}\n                                               className=\"table-setting__item\" style={displayLinkStats}>\n                                                <svg className=\"table-setting__icon\">\n                                                    <use href=\"/img/icons/icons.svg#stat\"/>\n                                                </svg>\n                                            </a>\n                                        </Tippy>\n                                        <Tippy content=\"View stats\">\n                                        <a href=\"\" data-correct\n                                           className=\"table-setting__item\" onClick={e => this.edit(item, e)}>\n                                            <svg className=\"table-setting__icon\">\n                                                <use href=\"/img/icons/icons.svg#correct\"/>\n                                            </svg>\n                                        </a>\n                                        </Tippy>\n                                        <Tippy content=\"View stats\">\n                                            <a href=\"\" className=\"table-setting__item\"\n                                               onClick={e => this.removeExperiment(item, e)}>\n                                                <svg className=\"table-setting__icon\">\n                                                    <use href=\"/img/icons/icons.svg#delete\"/>\n                                                </svg>\n                                            </a>\n                                        </Tippy>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"table-setting__row table-setting__row_edit\">\n                                <div className=\"table-setting__column1\"/>\n                                <form className=\"create-setting__form\">\n                                    <div className=\"create-setting__row\">\n                                        <div className=\"create-setting__item\">\n                                            <label className=\"create-setting__label\">Experiment name</label>\n                                            <input autoComplete=\"off\"\n                                                   type=\"text\"\n                                                   data-error=\"Ошибка\"\n                                                   placeholder=\"Button\"\n                                                   className=\"input create-setting__input\"\n                                                   value={experimentName}\n                                                   onChange={this.changeName.bind(this)}\n                                            />\n                                        </div>\n                                        <ExperimentUidInput\n                                            uid={item.alias}\n                                            mode={this.props.parent.appState.mode}\n                                        />\n                                    </div>\n\n                                    {branches.map((branch) =>\n\n                                        <div className=\"create-setting__row\">\n                                            <div className=\"create-setting__item2\">\n                                                <div className=\"create-setting__item\">\n                                                    <label className=\"create-setting__label\">Branch name</label>\n                                                    <input autoComplete=\"off\"\n                                                           type=\"text\"\n                                                           data-error=\"Ошибка\"\n                                                           placeholder=\"Button color test\"\n                                                           className=\"input create-setting__input\"\n                                                           id={'branch-' + branch.name}\n                                                           data-id={branch.id}\n                                                           value={branch.uid}\n                                                           onChange={this.changeBranchName.bind(this)}\n                                                    />\n                                                </div>\n                                                <div className=\"create-setting__item-digit\">\n                                                    <label className=\"create-setting__label\">Split</label>\n                                                    <div className=\"quantity\">\n                                                        <span className=\"quantity__label\">%</span>\n                                                        <div className=\"quantity__input\">\n                                                            <input autoComplete=\"off\"\n                                                                   type=\"text\"\n                                                                   name=\"form[]\"\n                                                                   data-id={branch.id}\n                                                                   id={'branch-percent-' + branch.id}\n                                                                   value={branch.percent ?? 0}\n                                                                   onChange={this.changePercent.bind(this)}\n                                                            />\n                                                        </div>\n                                                        <div className=\"quantity__buttons\"\n                                                             onClick={this.changePercent.bind(this)}>\n                                                            <div className=\"quantity__button quantity__button_plus \">\n                                                                <svg className=\"quantity__icon\">\n                                                                    <use href=\"/img/icons/icons.svg#arrow-quantity\"/>\n                                                                </svg>\n                                                            </div>\n                                                            <div className=\"quantity__button quantity__button_minus \">\n                                                                <svg className=\"quantity__icon\">\n                                                                    <use href=\"/img/icons/icons.svg#arrow-quantity\"/>\n                                                                </svg>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <button className=\"create-setting__remove\" data-id={branch.id}\n                                                        onClickCapture={(e) => this.removeBranch(e)}>\n                                                    <svg className=\"create-setting__remove-icon\">\n                                                        <use href=\"/img/icons/icons.svg#close\"/>\n                                                    </svg>\n                                                </button>\n                                            </div>\n                                        </div>\n                                    )}\n\n                                    <div className=\"create-setting__bottom\">\n                                        <button className=\"create-setting__cancel\"\n                                                onClickCapture={e => this.cancelEdit(e)}>Cancel\n                                        </button>\n                                        <button className=\"create-setting__update button\"\n                                                onClickCapture={e => this.submitHandle(e)}>\n                                            Update\n                                        </button>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nexport default ExperimentsList;\n","import React from 'react';\nimport ExperimentCreate from '../containers/ExperimentCreate';\nimport ExperimentsList from '../containers/ExperimentsList';\nimport toast, {Toaster} from \"react-hot-toast\";\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            'experiments': []\n        };\n        this.refreshState();\n        this.experimentList = null;\n        this.experimentCreate = null;\n        this.toast = toast;\n    }\n\n    refreshState() {\n        this.appState = {\n            'mode': 'create',\n            'activeItem': {},\n        };\n    }\n\n    rerender(proxyBindings) {\n        this.state.proxyBindings.push(proxyBindings);\n        this.forceUpdate();\n    }\n\n    edit(item) {\n        this.appState.mode = 'edit';\n        this.appState.activeItem = item;\n\n        console.log(this.appState);\n        this.forceUpdate();\n    }\n\n    changeName(value) {\n        this.appState.activeItem.name = value;\n        this.forceUpdate();\n    }\n\n    changeUid(value) {\n        value = value.replace(/ /g, '-');\n        this.appState.activeItem.alias = value;\n        this.forceUpdate();\n    }\n\n    changePercent(e) {\n        let id = e.target.closest(\".quantity\").querySelector(\"input\").getAttribute('data-id');\n        let value = e.target.closest(\".quantity\").querySelector(\"input\").value;\n        if (e.target.closest(\".quantity__button\")) {\n            value = parseInt(e.target.closest(\".quantity\").querySelector(\"input\").value);\n            e.target.closest(\".quantity__button\").classList.contains(\"quantity__button_plus\") ? value++ : --value;\n            value = value < 0 ? value = 0 : value;\n        }\n\n        this.appState.activeItem.branches = this.appState.activeItem.branches.reduce(function (acc, branch) {\n            if (branch.id === id) {\n                branch.percent = value;\n            }\n\n            acc.push(branch);\n\n            return acc;\n        }, []);\n        this.forceUpdate();\n\n\n        return false;\n    }\n\n    changeBranchName(e) {\n        let id = e.target.getAttribute('data-id');\n\n        this.appState.activeItem.branches = this.appState.activeItem.branches.reduce(function (acc, branch) {\n            if (branch.id === id) {\n                branch.uid = e.target.value;\n            }\n\n            acc.push(branch);\n\n            return acc;\n        }, []);\n        this.forceUpdate();\n\n        return false;\n    }\n\n    render() {\n        return (\n            <div>\n                <ExperimentsList state={this.state} parent={this}/>\n                <ExperimentCreate parent={this} state={this.appState}/>\n                <Toaster\n                    position=\"top-left\"\n                    reverseOrder={false}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App","import React from 'react'\nimport { render } from 'react-dom'\nimport App from './components/App'\n\nif (!window.api) {\n  window.api = 'http://localhost:930/api/v1/';\n}\n\nrender(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}