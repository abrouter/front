{"version":3,"sources":["http/httpRequest.js","http/saveExperimentState.js","containers/ExperimentCreate.js","http/getExperiments.js","http/deleteExperimentState.js","containers/DontHaveExperiments.js","containers/Navigation/Tabs/TabsToExperiments.js","containers/Navigation/Tabs/TabsToFeatureFlag.js","containers/Navigation/Navigation.js","containers/ExperimentsList.js","components/App.js","index.js"],"names":["httpRequest","url","method","body","data","credentials","window","token","JSON","stringify","fetch","api","then","response","status","error","Error","json","saveExperimentState","experiment","link","ownerId","undefined","userId","payload","mode","name","isEnabled","isFeatureToggle","branches","reduce","acc","branch","push","id","uid","percent","ExperimentCreate","props","styleCreateExperimentBlock","parent","experimentCreate","submitHandle","bind","map","this","forceUpdate","event","appState","adding","createFeatureToggle","preventDefault","activeItem","experimentList","load","showNotifications","redirectToExperiments","refreshState","message","toast","success","style","background","color","padding","iconTheme","primary","secondary","item","branchUid","i","Date","now","toString","setTimeout","document","getElementById","e","currentTarget","getAttribute","filter","createBranchId","value","changeName","changePercent","changeBranchName","tab","setActiveTab","experimentStyleBlock","getElementsByClassName","classList","add","getExperimentsByTab","displayAddBranch","titleCreate","experimentName","className","class","autocomplete","type","data-error","placeholder","onChange","target","onSubmit","data-id","onClick","href","onClickCapture","removeBranch","addBranch","React","Component","getExperiments","experiments","meta","newItem","attributes","alias","is_enabled","is_feature_toggle","relationships","owner","included","deleteExperimentState","DontHaveExperiments","buttonName","createExperiment","srcSet","src","alt","TabsToExperiments","activeExperiments","notActiveExperiments","length","showActiveExperiments","showNotActiveExperiments","TabsToFeatureFlag","showAllExperiments","Navigation","ExperimentsList","state","isLoaded","activeTab","displayExperiments","setState","enable","deleteClassEdit","edit","submitHandleCheckbox","deleteClassActive","remove","addClassNameActive","showDontHaveExperiments","showExperiments","buttonCreate","displayLinkStats","spinnerStyle","active","spinner","styles","base","position","height","width","stroke","overlay","showActiveExperiment","showNotActiveExperiment","showAllExperiment","data-edit-flags","checked","editCheckbox","for","data-tippy-content","data-correct","removeExperiment","autoComplete","cancelEdit","App","proxyBindings","console","log","closest","querySelector","parseInt","contains","reverseOrder","render"],"mappings":"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","file":"static/js/main.c6ce29e3.chunk.js","sourcesContent":["function httpRequest(url, method, body) {\n  let data = {\n    credentials: 'include',\n    'method': method,\n    credentials: 'omit',\n    headers: {\n      'Content-Type': 'application/json',\n      'Accept': 'application/json',\n      'Authorization': window.token\n    },\n  };\n  if (method !== 'GET') {\n    data.body = JSON.stringify(body);\n  }\n\n\n    return fetch(window.api + url, data)\n      .then(response => {\n\n        if (response.status !== 200 && response.status !== 201 && response.status !== 204) {\n          let error = (new Error('Request failed'));\n          error.json = response.json();\n          throw error; \n        }\n\n        if (method !== 'DELETE') {\n          return response.json()\n        } else {\n          return response;\n        }\n      }\n      );\n}\n\nexport default httpRequest;\n","import httpRequest from './httpRequest';\n\nfunction saveExperimentState(experiment) {\n    const ownerId = experiment.ownerId === undefined ? window.userId : experiment.ownerId;\n    const dataType = window.mode === 'feature-toggle' ? 'feature-toggles' : 'experiments';\n\n    let payload = {\n        'data': {\n            'type': dataType,\n            'attributes': {\n                'name': experiment.name,\n                'is_enabled': experiment.isEnabled ?? true,\n                'is_feature_toggle': experiment.isFeatureToggle ?? false,\n                'config': [],\n            },\n            'relationships': {\n                'branches': {\n                    'data': experiment.branches.reduce(function (acc, branch) {\n                        acc.push({\n                            'id': branch.id,\n                            'type': 'experiment_branches',\n                        });\n\n                        return acc;\n                    }, [])\n                },\n                'owner': {\n                    'data': {\n                        'id': ownerId,\n                        'type': 'users',\n                    }\n                }\n            }\n        },\n        'included': experiment.branches.reduce(function (acc, branch) {\n            acc.push({\n                'id': branch.id,\n                'type': 'experiment_branches',\n                'attributes': {\n                    'name': branch.uid,\n                    'percent': branch.percent,\n                    'uid': branch.uid,\n                    'config': {},\n                },\n                'relationships': {\n                    'experiment': {\n                        'data': {\n                            'id': experiment.id,\n                            'type': 'experiments',\n                        },\n                    },\n                    'owner': {\n                        'data': {\n                            'id': ownerId,\n                            'type': 'users',\n                        }\n                    }\n                }\n            });\n\n            return acc;\n        }, []),\n    };\n    if (experiment.id !== undefined) {\n        payload.data.id = experiment.id;\n    }\n\n    let link;\n\n    if(window.mode === 'feature-toggle') {\n        link = 'feature-toggles/' + (experiment.id ?? '');\n    } else link = 'experiments/' + (experiment.id ?? '');\n\n    return httpRequest(link, experiment.id === undefined ? 'POST' : 'PATCH', payload);\n}\n\nexport default saveExperimentState;\n","import React from 'react';\nimport saveExperimentState from '../http/saveExperimentState';\n\nclass ExperimentCreate extends React.Component {\n    styleCreateExperimentBlock = {'display':'none'};\n\n    constructor(props) {\n        super(props);\n\n        this.parent = props.parent;\n        this.props.parent.experimentCreate = this;\n        this.submitHandle = this.submitHandle.bind(this);\n        this.map = {};\n    }\n\n    componentDidMount() {\n        this.forceUpdate();\n    }\n\n    submitHandle(event) {\n        this.props.parent.appState.adding=true;\n        this.forceUpdate();\n\n        if (window.mode === 'feature-toggle' && this.props.parent.appState.mode !== 'edit') {\n            this.createFeatureToggle()\n        }\n\n        event.preventDefault();\n        saveExperimentState(this.props.parent.appState.activeItem).then(response => {\n            this.props.parent.experimentList.load();\n            this.showNotifications();\n            this.redirectToExperiments();\n            this.props.parent.refreshState();\n            this.props.parent.appState.adding=false;\n            this.forceUpdate();\n        });\n\n        return false;\n    }\n\n    showNotifications() {\n        let message;\n        let name;\n        let mode = this.props.parent.appState.mode;\n        window.mode === 'feature-toggle' ? name = 'Feature flag' : name = 'Experiment';\n\n        switch (mode) {\n            case ('create'):\n                message = 'has been successfully created';\n                break;\n            case ('edit'):\n                message = 'has been successfully updated';\n                break;\n            case ('delete'):\n                message = 'has been successfully deleted';\n                break;\n        }\n\n        this.parent.toast.success(name + ' ' + message, {\n            style: {\n                background: '#51A351',\n                color: '#FFFFFF',\n                padding: '16px'\n            },\n            iconTheme: {\n                primary: '#51A351',\n                secondary: '#FFFFFF',\n            },\n        });\n    }\n\n    submitHandleCheckbox(item) {\n        saveExperimentState(item).then(response => {\n            this.props.parent.experimentList.load();\n            this.props.parent.refreshState();\n            this.forceUpdate();\n        });\n    }\n\n    createFeatureToggle() {\n        let branchUid = ['On', 'Off'];\n        let percent = [100, 0];\n        this.props.parent.appState.activeItem.isFeatureToggle = true;\n        this.props.parent.appState.activeItem.branches = [];\n\n        for (let i = 0; i < 2; i++) {\n            this.props.parent.appState.activeItem.branches.push({\n                'id': Date.now().toString(),\n                'uid': branchUid[i],\n                'percent': percent[i],\n            });\n        }\n    }\n\n    error(message) {\n        setTimeout(function () {\n            document.getElementById('message').style = 'dispaly:block';\n        }, 200);\n        this.message = message;\n    }\n\n    createBranchId() {\n        this.props.parent.appState.activeItem.branches = [];\n\n        for (let i = 0; i < 2; i++) {\n            this.props.parent.appState.activeItem.branches.push({\n                'id': Date.now().toString() + i\n            });\n        }\n\n        this.forceUpdate();\n    }\n\n    addBranch(e) {\n        if (this.props.parent.appState.activeItem.branches === undefined) {\n            this.props.parent.appState.activeItem.branches = [];\n        }\n\n        this.props.parent.appState.activeItem.branches.push({\n            'id': Date.now().toString()\n        });\n\n        this.forceUpdate();\n        e.preventDefault();\n        return false;\n    }\n\n    removeBranch(e) {\n        e.preventDefault();\n        let id = e.currentTarget.getAttribute('data-id');\n        this.props.parent.appState.activeItem.branches = this.props.parent.appState.activeItem.branches.filter(function (branch) {\n            return branch.id !== id;\n        });\n        this.forceUpdate();\n    }\n\n    createExperiment(e) {\n        this.styleCreateExperimentBlock = {'display':'block'};\n        this.createBranchId();\n        this.forceUpdate();\n    }\n\n    changeName(value) {\n        this.props.parent.changeName(value);\n        this.forceUpdate();\n    }\n\n    changePercent(e) {\n        this.props.parent.changePercent(e);\n        this.forceUpdate();\n    }\n\n    changeBranchName(e) {\n        this.props.parent.changeBranchName(e);\n        this.forceUpdate();\n    }\n\n    redirectToExperiments() {\n        let mode = this.props.parent.appState.mode;\n\n        if (mode === 'create') {\n            let tab = window.mode === 'feature-toggle' ? 'all' : 'active';\n            this.props.parent.experimentList.setActiveTab(tab);\n            this.props.parent.experimentList.experimentStyleBlock = {'display':'block'};\n            this.styleCreateExperimentBlock = {'display':'none'};\n            document.getElementsByClassName('top-setting__item')[0].classList.add('active');\n            this.props.parent.experimentList.getExperimentsByTab();\n        }\n\n        this.forceUpdate();\n    }\n\n    render() {\n        const displayAddBranch = window.mode === 'feature-toggle' ? {'display':'none'} : {};\n        const titleCreate = window.mode === 'feature-toggle' ? 'flag' : 'experiment';\n        let branches = this.props.parent.appState.activeItem.branches ?? [];\n        let experimentName = this.props.parent.appState.activeItem.name ?? '';\n\n        return (\n            <>\n                <div className=\"setting__create create-setting\" style={this.styleCreateExperimentBlock}>\n                    <div className=\"create-setting__block\">\n                        <div className=\"create-setting__title\">\n                            Create a new {titleCreate}\n                        </div>\n                        <form class=\"create-setting__form\">\n                            <div className=\"create-setting__item\">\n                                <label className=\"create-setting__label\">Experiment name</label>\n                                <input\n                                    autocomplete=\"off\"\n                                    type=\"text\"\n                                    data-error=\"Ошибка\"\n                                    placeholder=\"Button color test\"\n                                    className=\"input create-setting__input\"\n                                    value={experimentName}\n                                    onChange={e => this.changeName(e.target.value)}\n                                />\n                            </div>\n                        </form>\n                    </div>\n                    <div className=\"create-setting__block\">\n                        <div className=\"create-setting__title\" style={displayAddBranch}>\n                            Branches\n                        </div>\n                        <form class=\"create-setting__form\" onSubmit={this.submitHandle.bind(this)}>\n                            {branches.map((branch) =>\n                                <div className=\"create-setting__row\" style={displayAddBranch}>\n                                    <div className=\"create-setting__item\">\n                                        <label className=\"create-setting__label\">Branch name</label>\n                                        <input autocomplete=\"off\"\n                                               type=\"text\"\n                                               data-error=\"Ошибка\"\n                                               placeholder=\"Branch name\"\n                                               className=\"input create-setting__input\"\n                                               onChange={this.changeBranchName.bind(this)}\n                                               data-id={branch.id}\n                                        />\n                                    </div>\n                                    <div className=\"create-setting__item2\">\n                                        <div className=\"create-setting__item-digit\">\n                                            <label className=\"create-setting__label\">Split</label>\n                                            <div className=\"quantity\">\n                                                <span className=\"quantity__label\">%</span>\n                                                <div className=\"quantity__input\">\n                                                    <input autocomplete=\"off\"\n                                                           type=\"text\"\n                                                           name=\"form[]\"\n                                                           data-id={branch.id}\n                                                           id={\"branch-percent-\" + branch.id}\n                                                           value={branch.percent ?? '0'}\n                                                           onChange={this.changePercent.bind(this)}\n                                                    />\n                                                </div>\n                                                <div className=\"quantity__buttons\" onClick={this.changePercent.bind(this)}>\n                                                    <div className=\"quantity__button quantity__button_plus\">\n                                                        <svg className=\"quantity__icon\">\n                                                            <use href=\"/img/icons/icons.svg#arrow-quantity\"></use>\n                                                        </svg>\n                                                    </div>\n                                                    <div className=\"quantity__button quantity__button_minus\">\n                                                        <svg className=\"quantity__icon\">\n                                                            <use href=\"/img/icons/icons.svg#arrow-quantity\"></use>\n                                                        </svg>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <button className=\"create-setting__remove\" data-id={branch.id} onClickCapture={e => this.removeBranch(e)}>\n                                            <svg className=\"create-setting__remove-icon\">\n                                                <use href=\"/img/icons/icons.svg#close\"></use>\n                                            </svg>\n                                        </button>\n                                    </div>\n                                </div>\n                            )}\n                            <button onClick={this.addBranch.bind(this)} className=\"create-setting__button\" style={displayAddBranch}>\n                                + Add another branch\n                            </button>\n                            <div className=\"create-setting__bottom\">\n                                <button className=\"create-setting__update button\" type=\"submit\">\n                                    Create\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n\n            </>\n\n        );\n    }\n}\nexport default ExperimentCreate\n","import httpRequest from './httpRequest';\n\nfunction getExperiments() {\n    return httpRequest('experiments?include=branches', 'GET', {}).then(response => {\n        let experiments = response.data.reduce(function (acc, item) {\n            let token = response.meta.token;\n            let link = 'https://abrouter.com/api/v1/experiment/run?token='+token+'&experimentId=' + item.id +'&userId={USER_ID}';\n            const newItem = {\n                'name': item.attributes.name,\n                'alias': item.attributes.alias,\n                'branches': [],\n                'isEnabled': item.attributes.is_enabled,\n                'isFeatureToggle': item.attributes.is_feature_toggle,\n                'id': item.id,\n                'ownerId': item.relationships.owner.data.id,\n                'tryUrl': link,\n            }; \n            let branches = item.relationships.branches.data.reduce(function (acc, branch) {\n                acc.push(response.included.filter(function (item) {\n                    return item.id === branch.id;\n                })[0]);\n                return acc;\n            }, []);\n\n            newItem.branches = branches.reduce(function (acc, item) {\n                const newItem = {\n                    'name': item.attributes.name,\n                    'percent': item.attributes.percent,\n                    'uid': item.attributes.uid,\n                    'id': item.id,\n                };\n                acc.push(newItem);\n                return acc;\n            }, []);\n        \n\n            acc.push(newItem);\n            return acc;\n        }, []);\n\n        experiments.token = response.meta.token;\n        return experiments;\n    });\n}\n\nexport default getExperiments;\n","import httpRequest from './httpRequest';\n\nfunction deleteExperimentState(experiment) {\n    const ownerId = experiment.ownerId === undefined ? window.userId : experiment.ownerId;\n\n    let payload = {\n        'data': {\n            'id': experiment.id,\n            'type': 'experiments'\n        }\n    };\n\n    return httpRequest('experiments/' + (experiment.id), 'DELETE', payload);\n}\n\nexport default deleteExperimentState;\n","import React from \"react\"\r\n\r\nclass DontHaveExperiments extends React.Component\r\n{\r\n    render() {\r\n        let buttonName = window.mode === 'feature-toggle' ? 'Add new flag' : 'Create new experiment'\r\n        return (\r\n            <>\r\n                <div className=\"setting__top top-setting\">\r\n                    <div className=\"top-setting__info\">\r\n                        You don't have active experiments, yet.\r\n                    </div>\r\n                    <button className=\"top-setting__btn\" onClick={(e) => this.props.createExperiment(e)}>\r\n                        <svg className=\"top-setting__icon\">\r\n                            <use href=\"/img/icons/icons.svg#plus\"/>\r\n                        </svg>\r\n                        <svg className=\"top-setting__icon top-setting__icon2\">\r\n                            <use href=\"/img/icons/icons.svg#plus2\"/>\r\n                        </svg>\r\n                        <span>{buttonName}</span>\r\n                    </button>\r\n                </div>\r\n                <div className=\"setting__image\" style={this.props.experimentStyleBlock}>\r\n                    <picture>\r\n                        <source srcSet=\"/img/png/setting.webp\" type=\"image/webp\"/>\r\n                        <img src=\"/img/png/setting.png?_v=1644581884261\" alt=\"Image\"/>\r\n                    </picture>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DontHaveExperiments;","import React from 'react';\r\n\r\nexport function TabsToExperiments(props) {\r\n    let activeExperiments = 0;\r\n    let notActiveExperiments = 0;\r\n    let experiments = props.experiments;\r\n    let length = props.experiments.length;\r\n\r\n    for(let i = 0; i < length; i++) {\r\n        if (experiments[i].isEnabled === true) {\r\n            activeExperiments++;\r\n        } else notActiveExperiments++;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"top-setting__item active\" onClick={(e) => props.showActiveExperiments(e)}>\r\n                <div className=\"top-setting__item-value\">\r\n                    Active\r\n                </div>\r\n                <span className=\"top-setting__count\">{activeExperiments}</span>\r\n            </div>\r\n            {/* <div className=\"top-setting__item\" onClick={this.showAwaitingLaunchExperiment.bind(this)}>\r\n                                    <div className=\"top-setting__item-value\">\r\n                                        Awaiting launch\r\n                                    </div>\r\n                                    <span className=\"top-setting__count\">0</span>\r\n                                </div> */}\r\n            <div className=\"top-setting__item\" onClick={(e) => props.showNotActiveExperiments(e)}>\r\n                <div className=\"top-setting__item-value\">\r\n                    Not active\r\n                </div>\r\n                <span className=\"top-setting__count\">{notActiveExperiments}</span>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport function TabsToFeatureFlag(props) {\r\n    return (\r\n        <>\r\n            <div className=\"top-setting__item active\" onClick={(e) => props.showAllExperiments(e)}>\r\n                <div className=\"top-setting__item-value\">\r\n                    All\r\n                </div>\r\n                <span className=\"top-setting__count\">{props.experiments}</span>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport {TabsToExperiments} from \"./Tabs/TabsToExperiments\";\r\nimport {TabsToFeatureFlag} from \"./Tabs/TabsToFeatureFlag\";\r\n\r\nexport function Navigation (props) {\r\n    let tab = window.mode === 'feature-toggle'\r\n        ? <TabsToFeatureFlag\r\n            experiments = {props.experiments.length}\r\n            showAllExperiments = {(e) => props.showAllExperiments(e)}\r\n        />\r\n        : <TabsToExperiments\r\n            experiments ={props.experiments}\r\n            showActiveExperiments = {(e) => props.showActiveExperiments(e)}\r\n            showNotActiveExperiments = {(e) => props.showNotActiveExperiments(e)}\r\n        />\r\n\r\n    return (\r\n        <div className=\"top-setting__navigation\">\r\n            {tab}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport getExperiments from '../http/getExperiments';\nimport deleteExperimentState from '../http/deleteExperimentState';\nimport LoadingOverlay from 'react-loading-overlay'\nimport DontHaveExperiments from \"./DontHaveExperiments\";\nimport {Navigation} from \"./Navigation/Navigation\";\n\nclass ExperimentsList extends React.Component {\n    experimentStyleBlock = {'display':'block'};\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoaded: 0,\n            activeTab: window.mode === 'feature-toggle'\n                ? 'all'\n                : 'active',\n            experiments: [],\n            displayExperiments: []\n        }\n        this.props = props;\n        this.props.parent.experimentList = this;\n\n    }\n\n    componentDidMount() {\n\n        if (window.mode !== 'mainpage') {\n            this.load();\n        } else {\n            this.setState({\n                isLoaded: 1\n            });\n        }\n    }\n\n    load() {\n        this.setState({\n            isLoaded: 0\n        })\n        getExperiments().then(data => {\n            this.props.state.experiments = data;\n\n            if (window.mode === 'feature-toggle') {\n                this.setState({\n                    experiments: data.filter(function (experiments) {\n                        return experiments.isFeatureToggle === true;\n                    })\n                })\n            } else {\n                this.setState({\n                    experiments: data.filter(function (experiments) {\n                        return experiments.isFeatureToggle === false;\n                    })\n                })\n            }\n\n            this.getExperimentsByTab();\n            this.setState({\n                isLoaded: 1\n            })\n        });\n    }\n\n    getExperimentsByTab() {\n        let enable;\n\n        switch (this.state.activeTab) {\n            case ('active'):\n                enable = true;\n                break;\n            case ('not active'):\n                enable = false;\n                break;\n            case ('all'):\n                break;\n            case ('awaiting launch'):\n                break;\n        }\n\n        if (this.state.activeTab === 'all') {\n            this.setState({\n                displayExperiments: this.state.experiments\n            })\n        } else {\n            this.setState({\n                displayExperiments: this.state.experiments.filter(function (experiment) {\n                    return experiment.isEnabled === enable;\n                })\n            })\n        }\n    }\n\n    removeExperiment(item, e) {\n        this.props.parent.appState.mode = 'delete';\n        this.props.parent.appState.activeItem = item;\n\n        e.preventDefault();\n        deleteExperimentState(this.props.parent.appState.activeItem).then(() => {\n            this.load();\n            this.props.parent.experimentCreate.showNotifications();\n            this.props.parent.refreshState();\n            this.forceUpdate();\n            this.props.parent.appState.adding=false;\n        });\n    }\n\n    removeBranch(e) {\n        e.preventDefault();\n        let id = e.currentTarget.getAttribute('data-id');\n        this.props.parent.appState.activeItem.branches = this.props.parent.appState.activeItem.branches.filter(function (branch) {\n            return branch.id !== id;\n        });\n        this.forceUpdate();\n    }\n\n    edit(item, e) {\n        this.deleteClassEdit();\n        document.getElementById('experiment-' + item.id).classList.add('edit')\n        e.preventDefault();\n        this.forceUpdate();\n        this.props.parent.edit(item);\n    }\n\n    editCheckbox(item) {\n        item.isEnabled = item.isEnabled !== true;\n\n        this.props.parent.experimentCreate.submitHandleCheckbox(item)\n        this.forceUpdate()\n    }\n\n    cancelEdit(e) {\n        this.deleteClassEdit();\n        e.preventDefault();\n        this.props.parent.appState.mode = 'create';\n        this.props.parent.appState.activeItem = {};\n        this.forceUpdate();\n    }\n\n    createExperiment(e) {\n        this.deleteClassActive(e)\n        this.props.parent.refreshState();\n        this.experimentStyleBlock = {'display':'none'};\n        this.props.parent.experimentCreate.createExperiment(e);\n        this.forceUpdate();\n    }\n\n    submitHandle(e) {\n        this.deleteClassEdit();\n        this.props.parent.experimentCreate.submitHandle(e);\n    }\n\n    addClassNameActive(e) {\n        this.experimentStyleBlock = {'display':'block'};\n        this.props.parent.experimentCreate.styleCreateExperimentBlock = {'display':'none'};\n        this.deleteClassActive(e);\n        e.currentTarget.classList.add(\"active\");\n        this.props.parent.experimentCreate.forceUpdate()\n        this.forceUpdate();\n    }\n\n    deleteClassActive() {\n        let link = document.getElementsByClassName('top-setting__item');\n\n        for(let i = 0; i < link.length; i++) {\n            link[i].classList.remove('active');\n        }\n    }\n\n    deleteClassEdit() {\n        let link = document.getElementsByClassName('table-setting__wrap');\n\n        for(let i = 0; i < link.length; i++) {\n            link[i].classList.remove('edit');\n        }\n    }\n\n    showAllExperiment(e) {\n        this.setState({\n            activeTab: 'all'\n        }, () => {\n            this.getExperimentsByTab()\n        })\n        this.addClassNameActive(e)\n    }\n\n    showActiveExperiment(e) {\n        this.setState({\n            activeTab: 'active'\n        }, () => {\n            this.getExperimentsByTab()\n        })\n        this.addClassNameActive(e)\n    }\n\n    showNotActiveExperiment(e) {\n        this.setState({\n            activeTab: 'not active'\n        }, () => {\n            this.getExperimentsByTab()\n        })\n        this.addClassNameActive(e)\n    }\n\n    showAwaitingLaunchExperiment(e) {\n        this.displayExperiments = []\n        this.setState({\n            activeTab: 'awaiting launch'\n        }, () => {\n            this.getExperimentsByTab()\n        })\n        this.addClassNameActive(e)\n    }\n\n    countActiveAndNotActiveExperiments() {\n        let activeExperiments = 0;\n        let notActiveExperiments = 0;\n        let experiments = this.state.experiments;\n        let length = this.state.experiments.length;\n\n        for(let i = 0; i < length; i++) {\n            if (experiments[i].isEnabled === true) {\n                activeExperiments++;\n            } else notActiveExperiments++;\n        }\n\n        return {activeExperiments, notActiveExperiments};\n    }\n\n    changeName(e) {\n        let value = e.target.value;\n        this.props.parent.changeName(value);\n        this.forceUpdate();\n    }\n\n    changePercent(e) {\n        this.props.parent.changePercent(e);\n        this.forceUpdate();\n    }\n\n    changeBranchName(e) {\n        this.props.parent.changeBranchName(e);\n        this.forceUpdate();\n    }\n\n    setActiveTab(tab) {\n        this.setState({\n            activeTab: tab\n        })\n    }\n\n    render() {\n        let showDontHaveExperiments;\n        let showExperiments = {'display':'flex'};\n        if (this.state.experiments.length === undefined || this.state.experiments.length === 0) {\n            showDontHaveExperiments = <DontHaveExperiments\n                experimentStyleBlock = {this.experimentStyleBlock}\n                createExperiment = {(e) => this.createExperiment(e)}\n            />\n            showExperiments = {'display':'none'};\n        }\n\n        let experimentName = this.props.parent.appState.activeItem.name;\n        let branches;\n\n        if (window.mode !== 'feature-toggle') {\n            branches = this.props.parent.appState.activeItem.branches ?? [];\n        } else branches = [];\n\n        let buttonCreate = window.mode === 'feature-toggle' ? 'Add new flag' : 'Create new experiment';\n        let displayLinkStats = window.mode === 'feature-toggle' ? {'display':'none'} : {'display':'block'};\n        let spinnerStyle = this.state.isLoaded === 0;\n\n        return (\n            <>\n                <LoadingOverlay\n                    active={spinnerStyle}\n                    spinner\n                    styles={{\n                        spinner: (base) => ({\n                            ...base,\n                            position: 'absolute',\n                            height: '64px',\n                            width: '64px',\n                            '& svg circle': {\n                                stroke: 'rgba(30, 144, 255)'\n                            }\n                        }),\n                        overlay: (base) => ({\n                            ...base,\n                            position: 'fixed',\n                            background: 'rgba(250, 250, 250, 0.80)',\n                        })\n                    }}\n                />\n                {showDontHaveExperiments}\n                <div className=\"setting__top top-setting\" style={showExperiments}>\n                    <Navigation\n                        showActiveExperiments = {(e) =>this.showActiveExperiment(e)}\n                        showNotActiveExperiments = {(e) => this.showNotActiveExperiment(e)}\n                        showAllExperiments = {(e) => this.showAllExperiment(e)}\n                        experiments ={this.state.experiments}\n                    />\n                    <button className=\"top-setting__btn\" onClick={this.createExperiment.bind(this)}>\n                        <svg className=\"top-setting__icon\">\n                            <use href=\"/img/icons/icons.svg#plus\"/>\n                        </svg>\n                        <svg className=\"top-setting__icon top-setting__icon2\">\n                            <use href=\"/img/icons/icons.svg#plus2\"/>\n                        </svg>\n                        <span>{buttonCreate}</span>\n                    </button>\n                </div>\n                <div data-edit-flags className=\"setting__table table-setting\" style={this.experimentStyleBlock}>\n                    <div className=\"table-setting__head\" style={showExperiments}>\n                        <div className=\" table-setting__column1\">Status</div>\n                        <div className=\"table-setting__column2 \">Experiment name</div>\n                        <div className=\"table-setting__column3\">\n                            Experiment ID\n                        </div>\n                        <div className=\"table-setting__column4\">\n                            Manage\n                        </div>\n                    </div>\n\n                    {this.state.displayExperiments.map((item) =>\n\n                        <div className=\"table-setting__wrap\" id={\"experiment-\" + item.id}>\n                            <div className=\"table-setting__row\">\n                                <div className=\"table-setting__status table-setting__column1\">\n                                    <div className=\"checkbox table-setting__checkbox\">\n                                        <input\n                                            id=\"c_1\"\n                                            data-error=\"Ошибка\"\n                                            className=\"checkbox__input\"\n                                            type=\"checkbox\"\n                                            value=\"1\"\n                                            name=\"form[]\"\n                                            checked={item.isEnabled}\n                                        />\n                                        <label\n                                            onClick={() => this.editCheckbox(item)}\n                                            for=\"c_1\"\n                                            className=\"checkbox__label\"\n                                        >\n                                            <span className=\"checkbox__text\"/>\n                                        </label>\n                                    </div>\n                                </div>\n                                <div className=\"table-setting__name table-setting__column2\">{item.name}</div>\n                                <div className=\"table-setting__id table-setting__column3\">\n                                    <span className=\"table-setting__mobile-label\">\n                                        Experiment ID\n                                    </span>\n                                    {item.alias ? item.alias : item.id}\n                                </div>\n                                <div className=\"table-setting__manage table-setting__column4\">\n                                    <div className=\"table-setting__items\">\n                                        <a href={\"/en/board/experiment-stats?experimentId=\"+item.id} data-tippy-content=\"View stats\" className=\"table-setting__item\" style={displayLinkStats}>\n                                            <svg className=\"table-setting__icon\">\n                                                <use href=\"/img/icons/icons.svg#stat\"/>\n                                            </svg>\n                                        </a>\n                                        <a href=\"\" data-correct data-tippy-content=\"View stats\" className=\"table-setting__item\" onClick={e => this.edit(item, e)}>\n                                            <svg className=\"table-setting__icon\">\n                                                <use href=\"/img/icons/icons.svg#correct\"/>\n                                            </svg>\n                                        </a>\n                                        <a href=\"\" data-tippy-content=\"View stats\" className=\"table-setting__item\" onClick={e => this.removeExperiment(item, e)}>\n                                            <svg className=\"table-setting__icon\">\n                                                <use href=\"/img/icons/icons.svg#delete\"/>\n                                            </svg>\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"table-setting__row table-setting__row_edit\">\n                                <div className=\"table-setting__column1\"/>\n                                <form className=\"create-setting__form\">\n                                    <div className=\"create-setting__row\">\n                                        <div className=\"create-setting__item\">\n                                            <label className=\"create-setting__label\">Experiment name</label>\n                                            <input autoComplete=\"off\"\n                                                   type=\"text\"\n                                                   data-error=\"Ошибка\"\n                                                   placeholder=\"Button\"\n                                                   className=\"input create-setting__input\"\n                                                   value={experimentName}\n                                                   onChange={this.changeName.bind(this)}\n                                            />\n                                        </div>\n                                    </div>\n\n                                    {branches.map((branch) =>\n\n                                        <div className=\"create-setting__row\">\n                                            <div className=\"create-setting__item2\">\n                                                <div className=\"create-setting__item\">\n                                                    <label className=\"create-setting__label\">Branch name</label>\n                                                    <input autoComplete=\"off\"\n                                                           type=\"text\"\n                                                           data-error=\"Ошибка\"\n                                                           placeholder=\"Button color test\"\n                                                           className=\"input create-setting__input\"\n                                                           id={'branch-' + branch.name}\n                                                           data-id={branch.id}\n                                                           value={branch.uid}\n                                                           onChange={this.changeBranchName.bind(this)}\n                                                    />\n                                                </div>\n                                                <div className=\"create-setting__item-digit\">\n                                                    <label className=\"create-setting__label\">Split</label>\n                                                    <div className=\"quantity\">\n                                                        <span className=\"quantity__label\">%</span>\n                                                        <div className=\"quantity__input\">\n                                                            <input autoComplete=\"off\"\n                                                                   type=\"text\"\n                                                                   name=\"form[]\"\n                                                                   data-id={branch.id}\n                                                                   id={'branch-percent-' + branch.id}\n                                                                   value={branch.percent ?? 0}\n                                                                   onChange={this.changePercent.bind(this)}\n                                                            />\n                                                        </div>\n                                                        <div className=\"quantity__buttons\"\n                                                             onClick={this.changePercent.bind(this)}>\n                                                            <div className=\"quantity__button quantity__button_plus \">\n                                                                <svg className=\"quantity__icon\">\n                                                                    <use href=\"/img/icons/icons.svg#arrow-quantity\"/>\n                                                                </svg>\n                                                            </div>\n                                                            <div className=\"quantity__button quantity__button_minus \">\n                                                                <svg className=\"quantity__icon\">\n                                                                    <use href=\"/img/icons/icons.svg#arrow-quantity\"/>\n                                                                </svg>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <button className=\"create-setting__remove\" data-id={branch.id}\n                                                        onClickCapture={(e) => this.removeBranch(e)}>\n                                                    <svg className=\"create-setting__remove-icon\">\n                                                        <use href=\"/img/icons/icons.svg#close\"/>\n                                                    </svg>\n                                                </button>\n                                            </div>\n                                        </div>\n\n                                    )}\n\n                                    <div className=\"create-setting__bottom\">\n                                        <button className=\"create-setting__cancel\" onClickCapture={e => this.cancelEdit(e)}>Cancel</button>\n                                        <button className=\"create-setting__update button\" onClickCapture={e => this.submitHandle(e)}>\n                                            Update\n                                        </button>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\nexport default ExperimentsList;\n","import React from 'react';\nimport ExperimentCreate from '../containers/ExperimentCreate';\nimport ExperimentsList from '../containers/ExperimentsList';\nimport toast, {Toaster} from \"react-hot-toast\";\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            'experiments': []\n        };\n        this.refreshState();\n        this.experimentList = null;\n        this.experimentCreate = null;\n        this.toast = toast;\n    }\n\n    refreshState() {\n        this.appState = {\n            'mode': 'create',\n            'activeItem': {},\n        };\n    }\n\n    rerender(proxyBindings) {\n        this.state.proxyBindings.push(proxyBindings);\n        this.forceUpdate();\n    }\n\n    edit(item) {\n        this.appState.mode = 'edit';\n        this.appState.activeItem = item;\n\n        console.log(this.appState);\n        this.forceUpdate();\n    }\n\n    changeName(value) {\n        this.appState.activeItem.name = value;\n        this.forceUpdate();\n    }\n\n    changePercent(e) {\n        let id = e.target.closest(\".quantity\").querySelector(\"input\").getAttribute('data-id');\n        let value = e.target.closest(\".quantity\").querySelector(\"input\").value;\n        if (e.target.closest(\".quantity__button\")) {\n            value = parseInt(e.target.closest(\".quantity\").querySelector(\"input\").value);\n            e.target.closest(\".quantity__button\").classList.contains(\"quantity__button_plus\") ? value++ : --value;\n            value = value < 0 ? value = 0 : value;\n        }\n\n        this.appState.activeItem.branches = this.appState.activeItem.branches.reduce(function (acc, branch) {\n            if (branch.id === id) {\n                branch.percent = value;\n            }\n\n            acc.push(branch);\n\n            return acc;\n        }, []);\n        this.forceUpdate();\n\n\n        return false;\n    }\n\n    changeBranchName(e) {\n        let id = e.target.getAttribute('data-id');\n\n        this.appState.activeItem.branches = this.appState.activeItem.branches.reduce(function (acc, branch) {\n            if (branch.id === id) {\n                branch.uid = e.target.value;\n            }\n\n            acc.push(branch);\n\n            return acc;\n        }, []);\n        this.forceUpdate();\n\n        return false;\n    }\n\n    render() {\n        return (\n            <div>\n                <ExperimentsList state={this.state} parent={this}/>\n                <ExperimentCreate parent={this} state={this.appState}/>\n                <Toaster\n                    position=\"top-left\"\n                    reverseOrder={false}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App","import React from 'react'\nimport { render } from 'react-dom'\nimport App from './components/App'\n\nif (!window.api) {\n  window.api = 'http://localhost:930/api/v1/';\n}\n\nrender(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}